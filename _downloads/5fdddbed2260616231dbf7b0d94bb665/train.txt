2024-05-17 19:37:19 (INFO): Project root: /home/runner/work/fairchem/fairchem/src/fairchem
2024-05-17 19:37:20 (WARNING): Detected old config, converting to new format. Consider updating to avoid potential incompatibilities.
2024-05-17 19:37:20 (INFO): amp: true
cmd:
  checkpoint_dir: fine-tuning/checkpoints/2024-05-17-19-37-36-ft-oxides
  commit: 00de11a
  identifier: ft-oxides
  logs_dir: fine-tuning/logs/tensorboard/2024-05-17-19-37-36-ft-oxides
  print_every: 10
  results_dir: fine-tuning/results/2024-05-17-19-37-36-ft-oxides
  seed: 0
  timestamp_id: 2024-05-17-19-37-36-ft-oxides
  version: 0.1.dev1+g00de11a
dataset:
  a2g_args:
    r_energy: true
    r_forces: true
  format: ase_db
  key_mapping:
    force: forces
    y: energy
  src: train.db
eval_metrics:
  metrics:
    energy:
    - mae
    forces:
    - forcesx_mae
    - forcesy_mae
    - forcesz_mae
    - mae
    - cosine_similarity
    - magnitude_error
    misc:
    - energy_forces_within_threshold
  primary_metric: forces_mae
gpus: 0
logger: tensorboard
loss_fns:
- energy:
    coefficient: 1
    fn: mae
- forces:
    coefficient: 1
    fn: l2mae
model: gemnet_oc
model_attributes:
  activation: silu
  atom_edge_interaction: true
  atom_interaction: true
  cbf:
    name: spherical_harmonics
  cutoff: 12.0
  cutoff_aeaint: 12.0
  cutoff_aint: 12.0
  cutoff_qint: 12.0
  direct_forces: true
  edge_atom_interaction: true
  emb_size_aint_in: 64
  emb_size_aint_out: 64
  emb_size_atom: 256
  emb_size_cbf: 16
  emb_size_edge: 512
  emb_size_quad_in: 32
  emb_size_quad_out: 32
  emb_size_rbf: 16
  emb_size_sbf: 32
  emb_size_trip_in: 64
  emb_size_trip_out: 64
  envelope:
    exponent: 5
    name: polynomial
  extensive: true
  forces_coupled: false
  max_neighbors: 30
  max_neighbors_aeaint: 20
  max_neighbors_aint: 1000
  max_neighbors_qint: 8
  num_after_skip: 2
  num_atom: 3
  num_atom_emb_layers: 2
  num_before_skip: 2
  num_blocks: 4
  num_concat: 1
  num_global_out_layers: 2
  num_output_afteratom: 3
  num_radial: 128
  num_spherical: 7
  otf_graph: true
  output_init: HeOrthogonal
  qint_tags:
  - 1
  - 2
  quad_interaction: true
  rbf:
    name: gaussian
  regress_forces: true
  sbf:
    name: legendre_outer
  symmetric_edge_symmetrization: false
noddp: false
optim:
  batch_size: 4
  clip_grad_norm: 10
  ema_decay: 0.999
  energy_coefficient: 1
  eval_batch_size: 16
  eval_every: 10
  factor: 0.8
  force_coefficient: 1
  load_balancing: atoms
  loss_energy: mae
  lr_initial: 0.0005
  max_epochs: 1
  mode: min
  num_workers: 2
  optimizer: AdamW
  optimizer_params:
    amsgrad: true
  patience: 3
  scheduler: ReduceLROnPlateau
  weight_decay: 0
outputs:
  energy:
    level: system
  forces:
    eval_on_free_atoms: true
    level: atom
    train_on_free_atoms: false
slurm: {}
task:
  dataset: ase_db
test_dataset:
  a2g_args:
    r_energy: false
    r_forces: false
  src: test.db
trainer: ocp
val_dataset:
  a2g_args:
    r_energy: true
    r_forces: true
  src: val.db

2024-05-17 19:37:20 (INFO): Loading dataset: ase_db
2024-05-17 19:37:20 (INFO): rank: 0: Sampler created...
2024-05-17 19:37:20 (INFO): Batch balancing is disabled for single GPU training.
2024-05-17 19:37:20 (INFO): rank: 0: Sampler created...
2024-05-17 19:37:20 (INFO): Batch balancing is disabled for single GPU training.
2024-05-17 19:37:20 (INFO): rank: 0: Sampler created...
2024-05-17 19:37:20 (INFO): Batch balancing is disabled for single GPU training.
2024-05-17 19:37:20 (INFO): Loading model: gemnet_oc
2024-05-17 19:37:20 (WARNING): Unrecognized arguments: ['symmetric_edge_symmetrization']
2024-05-17 19:37:23 (INFO): Loaded GemNetOC with 38864438 parameters.
2024-05-17 19:37:23 (WARNING): Model gradient logging to tensorboard not yet supported.
2024-05-17 19:37:23 (WARNING): Using `weight_decay` from `optim` instead of `optim.optimizer_params`.Please update your config to use `optim.optimizer_params.weight_decay`.`optim.weight_decay` will soon be deprecated.
2024-05-17 19:37:23 (INFO): Loading checkpoint from: /tmp/ocp_checkpoints/gnoc_oc22_oc20_all_s2ef.pt
2024-05-17 19:37:23 (INFO): Overwriting scaling factors with those loaded from checkpoint. If you're generating predictions with a pretrained checkpoint, this is the correct behavior. To disable this, delete `scale_dict` from the checkpoint. 
/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/torch_geometric/data/collate.py:145: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  storage = elem.storage()._new_shared(numel)
/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/torch_geometric/data/collate.py:145: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  storage = elem.storage()._new_shared(numel)
2024-05-17 19:37:46 (INFO): energy_forces_within_threshold: 0.00e+00, energy_mae: 6.77e+00, forcesx_mae: 4.11e-02, forcesy_mae: 3.63e-02, forcesz_mae: 5.26e-02, forces_mae: 4.33e-02, forces_cosine_similarity: 8.24e-02, forces_magnitude_error: 7.42e-02, loss: 6.86e+00, lr: 5.00e-04, epoch: 1.69e-01, step: 1.00e+01
2024-05-17 19:37:47 (INFO): Evaluating on val.
device 0:   0%|          | 0/2 [00:00<?, ?it/s]/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/torch_geometric/data/collate.py:145: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  storage = elem.storage()._new_shared(numel)
/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/torch_geometric/data/collate.py:145: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  storage = elem.storage()._new_shared(numel)
device 0:  50%|█████     | 1/2 [00:04<00:04,  4.84s/it]device 0: 100%|██████████| 2/2 [00:07<00:00,  3.71s/it]device 0: 100%|██████████| 2/2 [00:07<00:00,  3.93s/it]
2024-05-17 19:37:55 (INFO): energy_forces_within_threshold: 0.0000, energy_mae: 8.7333, forcesx_mae: 0.0231, forcesy_mae: 0.0188, forcesz_mae: 0.0198, forces_mae: 0.0206, forces_cosine_similarity: -0.0317, forces_magnitude_error: 0.0290, loss: 8.6590, epoch: 0.1695
2024-05-17 19:37:55 (INFO): Predicting on test.
device 0:   0%|          | 0/2 [00:00<?, ?it/s]/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/torch_geometric/data/collate.py:145: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  storage = elem.storage()._new_shared(numel)
/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/torch_geometric/data/collate.py:145: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  storage = elem.storage()._new_shared(numel)
device 0:  50%|█████     | 1/2 [00:03<00:03,  3.12s/it]device 0: 100%|██████████| 2/2 [00:05<00:00,  2.83s/it]device 0: 100%|██████████| 2/2 [00:05<00:00,  2.94s/it]
2024-05-17 19:38:01 (INFO): Writing results to fine-tuning/results/2024-05-17-19-37-36-ft-oxides/ocp_predictions.npz
2024-05-17 19:38:27 (INFO): energy_forces_within_threshold: 0.00e+00, energy_mae: 1.07e+01, forcesx_mae: 2.63e-02, forcesy_mae: 1.76e-02, forcesz_mae: 1.90e-02, forces_mae: 2.10e-02, forces_cosine_similarity: -3.68e-02, forces_magnitude_error: 2.26e-02, loss: 1.07e+01, lr: 5.00e-04, epoch: 3.39e-01, step: 2.00e+01
2024-05-17 19:38:29 (INFO): Evaluating on val.
device 0:   0%|          | 0/2 [00:00<?, ?it/s]/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/torch_geometric/data/collate.py:145: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  storage = elem.storage()._new_shared(numel)
/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/torch_geometric/data/collate.py:145: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  storage = elem.storage()._new_shared(numel)
device 0:  50%|█████     | 1/2 [00:04<00:04,  4.83s/it]device 0: 100%|██████████| 2/2 [00:07<00:00,  3.77s/it]device 0: 100%|██████████| 2/2 [00:08<00:00,  4.01s/it]
2024-05-17 19:38:37 (INFO): energy_forces_within_threshold: 0.0000, energy_mae: 2.6832, forcesx_mae: 0.0235, forcesy_mae: 0.0180, forcesz_mae: 0.0129, forces_mae: 0.0181, forces_cosine_similarity: 0.0673, forces_magnitude_error: 0.0215, loss: 2.7112, epoch: 0.3390
2024-05-17 19:38:37 (INFO): Predicting on test.
device 0:   0%|          | 0/2 [00:00<?, ?it/s]/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/torch_geometric/data/collate.py:145: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  storage = elem.storage()._new_shared(numel)
/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/torch_geometric/data/collate.py:145: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  storage = elem.storage()._new_shared(numel)
device 0:  50%|█████     | 1/2 [00:03<00:03,  3.20s/it]device 0: 100%|██████████| 2/2 [00:06<00:00,  3.02s/it]device 0: 100%|██████████| 2/2 [00:06<00:00,  3.14s/it]
2024-05-17 19:38:44 (INFO): Writing results to fine-tuning/results/2024-05-17-19-37-36-ft-oxides/ocp_predictions.npz
2024-05-17 19:39:03 (INFO): energy_forces_within_threshold: 0.00e+00, energy_mae: 4.87e+00, forcesx_mae: 1.83e-02, forcesy_mae: 1.52e-02, forcesz_mae: 2.07e-02, forces_mae: 1.80e-02, forces_cosine_similarity: -1.09e-02, forces_magnitude_error: 2.32e-02, loss: 4.90e+00, lr: 5.00e-04, epoch: 5.08e-01, step: 3.00e+01
2024-05-17 19:39:05 (INFO): Evaluating on val.
device 0:   0%|          | 0/2 [00:00<?, ?it/s]/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/torch_geometric/data/collate.py:145: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  storage = elem.storage()._new_shared(numel)
/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/torch_geometric/data/collate.py:145: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  storage = elem.storage()._new_shared(numel)
device 0:  50%|█████     | 1/2 [00:04<00:04,  4.37s/it]device 0: 100%|██████████| 2/2 [00:07<00:00,  3.51s/it]device 0: 100%|██████████| 2/2 [00:07<00:00,  3.73s/it]
2024-05-17 19:39:13 (INFO): energy_forces_within_threshold: 0.0000, energy_mae: 4.3925, forcesx_mae: 0.0261, forcesy_mae: 0.0283, forcesz_mae: 0.0320, forces_mae: 0.0288, forces_cosine_similarity: -0.0229, forces_magnitude_error: 0.0401, loss: 4.4791, epoch: 0.5085
2024-05-17 19:39:38 (INFO): energy_forces_within_threshold: 0.00e+00, energy_mae: 4.72e+00, forcesx_mae: 2.76e-02, forcesy_mae: 2.08e-02, forcesz_mae: 2.87e-02, forces_mae: 2.57e-02, forces_cosine_similarity: -8.50e-02, forces_magnitude_error: 3.28e-02, loss: 4.77e+00, lr: 5.00e-04, epoch: 6.78e-01, step: 4.00e+01
2024-05-17 19:39:39 (INFO): Evaluating on val.
device 0:   0%|          | 0/2 [00:00<?, ?it/s]/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/torch_geometric/data/collate.py:145: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  storage = elem.storage()._new_shared(numel)
/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/torch_geometric/data/collate.py:145: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  storage = elem.storage()._new_shared(numel)
device 0:  50%|█████     | 1/2 [00:04<00:04,  4.63s/it]device 0: 100%|██████████| 2/2 [00:07<00:00,  3.69s/it]device 0: 100%|██████████| 2/2 [00:07<00:00,  3.92s/it]
2024-05-17 19:39:47 (INFO): energy_forces_within_threshold: 0.0333, energy_mae: 2.9368, forcesx_mae: 0.0158, forcesy_mae: 0.0158, forcesz_mae: 0.0118, forces_mae: 0.0145, forces_cosine_similarity: 0.0905, forces_magnitude_error: 0.0173, loss: 2.9395, epoch: 0.6780
2024-05-17 19:39:48 (INFO): Predicting on test.
device 0:   0%|          | 0/2 [00:00<?, ?it/s]/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/torch_geometric/data/collate.py:145: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  storage = elem.storage()._new_shared(numel)
/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/torch_geometric/data/collate.py:145: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  storage = elem.storage()._new_shared(numel)
device 0:  50%|█████     | 1/2 [00:03<00:03,  3.27s/it]device 0: 100%|██████████| 2/2 [00:06<00:00,  3.04s/it]device 0: 100%|██████████| 2/2 [00:06<00:00,  3.16s/it]
2024-05-17 19:39:54 (INFO): Writing results to fine-tuning/results/2024-05-17-19-37-36-ft-oxides/ocp_predictions.npz
2024-05-17 19:40:15 (INFO): energy_forces_within_threshold: 0.00e+00, energy_mae: 5.09e+00, forcesx_mae: 2.22e-02, forcesy_mae: 2.52e-02, forcesz_mae: 1.94e-02, forces_mae: 2.23e-02, forces_cosine_similarity: 6.04e-02, forces_magnitude_error: 3.10e-02, loss: 5.13e+00, lr: 5.00e-04, epoch: 8.47e-01, step: 5.00e+01
2024-05-17 19:40:17 (INFO): Evaluating on val.
device 0:   0%|          | 0/2 [00:00<?, ?it/s]/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/torch_geometric/data/collate.py:145: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  storage = elem.storage()._new_shared(numel)
/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/torch_geometric/data/collate.py:145: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  storage = elem.storage()._new_shared(numel)
device 0:  50%|█████     | 1/2 [00:04<00:04,  4.76s/it]device 0: 100%|██████████| 2/2 [00:07<00:00,  3.63s/it]device 0: 100%|██████████| 2/2 [00:07<00:00,  3.89s/it]
2024-05-17 19:40:25 (INFO): energy_forces_within_threshold: 0.0000, energy_mae: 4.4190, forcesx_mae: 0.0126, forcesy_mae: 0.0143, forcesz_mae: 0.0116, forces_mae: 0.0128, forces_cosine_similarity: 0.1245, forces_magnitude_error: 0.0162, loss: 4.4046, epoch: 0.8475
2024-05-17 19:40:25 (INFO): Predicting on test.
device 0:   0%|          | 0/2 [00:00<?, ?it/s]/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/torch_geometric/data/collate.py:145: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  storage = elem.storage()._new_shared(numel)
/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/torch_geometric/data/collate.py:145: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  storage = elem.storage()._new_shared(numel)
device 0:  50%|█████     | 1/2 [00:03<00:03,  3.15s/it]device 0: 100%|██████████| 2/2 [00:05<00:00,  2.88s/it]device 0: 100%|██████████| 2/2 [00:06<00:00,  3.01s/it]
2024-05-17 19:40:31 (INFO): Writing results to fine-tuning/results/2024-05-17-19-37-36-ft-oxides/ocp_predictions.npz
2024-05-17 19:40:50 (INFO): Total time taken: 207.16632342338562
