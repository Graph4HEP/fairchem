2024-08-14 00:54:09 (INFO): Running in non-distributed local mode
2024-08-14 00:54:09 (INFO): Setting env PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True
2024-08-14 00:54:09 (INFO): Project root: /home/runner/work/fairchem/fairchem/src/fairchem
2024-08-14 00:54:10 (INFO): amp: true
cmd:
  checkpoint_dir: ./checkpoints/2024-08-14-00-53-20
  commit: 8fb16d6
  identifier: ''
  logs_dir: ./logs/tensorboard/2024-08-14-00-53-20
  print_every: 10
  results_dir: ./results/2024-08-14-00-53-20
  seed: 0
  timestamp_id: 2024-08-14-00-53-20
  version: 1.1.0
dataset: {}
evaluation_metrics:
  metrics:
    energy:
    - mae
    forces:
    - forcesx_mae
    - forcesy_mae
    - forcesz_mae
    - mae
    - cosine_similarity
    - magnitude_error
    misc:
    - energy_forces_within_threshold
  primary_metric: forces_mae
gp_gpus: null
gpus: 0
logger: tensorboard
loss_functions:
- energy:
    coefficient: 1
    fn: mae
- forces:
    coefficient: 1
    fn: l2mae
model:
  activation: silu
  cbf:
    name: spherical_harmonics
  cutoff: 6.0
  direct_forces: true
  emb_size_atom: 512
  emb_size_bil_trip: 64
  emb_size_cbf: 16
  emb_size_edge: 512
  emb_size_rbf: 16
  emb_size_trip: 64
  envelope:
    exponent: 5
    name: polynomial
  extensive: true
  max_neighbors: 50
  name: gemnet_t
  num_after_skip: 2
  num_atom: 3
  num_before_skip: 1
  num_blocks: 3
  num_concat: 1
  num_radial: 128
  num_spherical: 7
  otf_graph: true
  output_init: HeOrthogonal
  rbf:
    name: gaussian
  regress_forces: true
noddp: false
optim:
  batch_size: 16
  clip_grad_norm: 10
  ema_decay: 0.999
  energy_coefficient: 1
  eval_batch_size: 16
  eval_every: 5000
  force_coefficient: 1
  loss_energy: mae
  loss_force: atomwisel2
  lr_gamma: 0.8
  lr_initial: 0.0005
  lr_milestones:
  - 64000
  - 96000
  - 128000
  - 160000
  - 192000
  max_epochs: 80
  num_workers: 2
  optimizer: AdamW
  optimizer_params:
    amsgrad: true
  warmup_steps: -1
outputs:
  energy:
    level: system
  forces:
    eval_on_free_atoms: true
    level: atom
    train_on_free_atoms: true
relax_dataset: {}
slurm: {}
task:
  prediction_dtype: float32
test_dataset:
  a2g_args:
    r_energy: false
    r_forces: false
  format: ase_db
  select_args:
    selection: natoms>5,xc=PBE
  src: data.db
trainer: ocp
val_dataset: {}

2024-08-14 00:54:10 (WARNING): Could not find dataset metadata.npz files in '[PosixPath('data.db')]'
2024-08-14 00:54:10 (WARNING): Disabled BalancedBatchSampler because num_replicas=1.
2024-08-14 00:54:10 (WARNING): Failed to get data sizes, falling back to uniform partitioning. BalancedBatchSampler requires a dataset that has a metadata attributed with number of atoms.
2024-08-14 00:54:10 (INFO): rank: 0: Sampler created...
2024-08-14 00:54:10 (INFO): Created BalancedBatchSampler with sampler=<fairchem.core.common.data_parallel.StatefulDistributedSampler object at 0x7f18d61afd90>, batch_size=16, drop_last=False
2024-08-14 00:54:10 (INFO): Loading model: gemnet_t
2024-08-14 00:54:12 (INFO): Loaded GemNetT with 31671825 parameters.
2024-08-14 00:54:12 (WARNING): log_summary for Tensorboard not supported
2024-08-14 00:54:12 (INFO): Attemping to load user specified checkpoint at /tmp/fairchem_checkpoints/gndt_oc22_all_s2ef.pt
2024-08-14 00:54:12 (INFO): Loading checkpoint from: /tmp/fairchem_checkpoints/gndt_oc22_all_s2ef.pt
2024-08-14 00:54:12 (INFO): Overwriting scaling factors with those loaded from checkpoint. If you're generating predictions with a pretrained checkpoint, this is the correct behavior. To disable this, delete `scale_dict` from the checkpoint. 
2024-08-14 00:54:12 (WARNING): Scale factor comment not found in model
2024-08-14 00:54:12 (INFO): Predicting on test.
device 0:   0%|                                           | 0/3 [00:00<?, ?it/s]/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/torch_geometric/data/collate.py:145: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  storage = elem.storage()._new_shared(numel)
/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/torch_geometric/data/collate.py:145: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  storage = elem.storage()._new_shared(numel)
device 0:  33%|███████████▋                       | 1/3 [00:02<00:04,  2.02s/it]device 0:  67%|███████████████████████▎           | 2/3 [00:04<00:02,  2.18s/it]device 0: 100%|███████████████████████████████████| 3/3 [00:06<00:00,  2.33s/it]device 0: 100%|███████████████████████████████████| 3/3 [00:06<00:00,  2.28s/it]
2024-08-14 00:54:19 (INFO): Writing results to ./results/2024-08-14-00-53-20/ocp_predictions.npz
2024-08-14 00:54:19 (INFO): Total time taken: 6.979607820510864
Elapsed time = 13.0 seconds
